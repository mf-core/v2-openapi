openapi: 3.1.0
info:
  title: Customers
  version: '1.0'
  summary: Customer management endpoints
  description: |-
    Create and manage customers.  A customer can be a contact or a company with the following distinctions:

    * A contact can belong to one or more companies
    * A company can be associated with multiple contacts

    Use the `../contacts` endpoint to create and manage contacts  
    Use the `../companies` endpoint to create and manage companies   
    Use the `../companies/contacts` endpoint to associate contacts with companies  
    Use the `../customers` POST endpoint to create a new contact and company with a single request  
  contact:
    name: Russ Palermo
    url: Base.do
    email: rjpalermo@Live.com
servers:
  - url: 'http://localhost:3030'
    description: Development
  - url: 'http://v2-customers-app.dev.vyapay.com'
    description: Staging (API Server)
  - url: 'http://v2-customers-app.vyapay.com'
    description: Production (API Server)
  - url: 'http://test-api.vyapay.com'
    description: Test (API Gateway)
  - url: 'http://api.vyapay.com'
    description: Production (API Gateway)
paths:
  /contacts:
    get:
      summary: Fetch Contacts
      tags:
        - CONTACTS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-contacts
      description: |-
        1. To list all Contacts associated with merchant account execute request without query paramters
        2.  To fetch a Contact by ID provide the system contact id (starts with _contact-_) as a query paramter `contact_id` value.

        | EXPAND AVAILABLE VALUES | DESCRIPTION |
        | :-- | :-- |
        | mid | If associated with a mid, expand and return the associated `mid_id` as a **mid** object |
        | contact | If associated with a company, expand and return the associated `contact_id` as a **contact** object |
        | company| Expand and return the associated `company_id` as a **company** object |
        | customer| Expand and return the associated `contact_id` or `company_id` as a **customer** object |
        | cart| Expand and return the associated `cart_id` as a **cart** object |
      parameters:
        - schema:
            type: string
            example: contact-1242342121392
          in: query
          name: id
          description: Fetch record by system row record identifier.  Starts with `contact-`
          allowEmptyValue: true
        - schema:
            type: string
            example: Marvin
          in: query
          name: first_name
          description: Fetch records containing the specified first name value
          allowEmptyValue: true
        - schema:
            type: string
            example: Johnson
          in: query
          name: last_name
          description: Fetch records containing the specified last name
          allowEmptyValue: true
        - schema:
            type: string
            example: Marvin Johnson
          in: query
          name: display_name
          description: Fetch records containing the specified display name value
          allowEmptyValue: true
    post:
      summary: Create a new Contact
      tags:
        - CONTACTS
      responses: {}
      operationId: post-contacts
      parameters: []
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Contacts.yaml
            examples:
              Post Example:
                value:
                  first_name: Marvin
                  last_name: Johnson
                  display_name: Marvin Johnson
                  default_email:
                    name: Primary email
                    address: marvin@example.com
                    type: PERSONAL
                  default_phone:
                    name: Primary phone
                    country_code: '+1'
                    number: 4212786391
                    type: MOBILE
                  avatar: 'https://avatars.dicebear.com/api/initials/marvin%20johnson.svg'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
    patch:
      summary: Patch a Contact by ID
      tags:
        - CONTACTS
      responses: {}
      operationId: patch-contacts
    delete:
      summary: Archive a Contact
      tags:
        - CONTACTS
      responses: {}
      operationId: delete-contacts
      description: |-
        Soft delete/archive a system contact record.  A "soft delete" sets a `deleted_at` field with a  timestamp and will not remove the contact record permanantly in order to maintain data integriety and associations with other records in the system.  

        All records with a `deleted_at` value are excluded from normal REST requests and system processing.

        * You can fetch an archived contact ...
        * Setting an archived contact's `deleted_at` value to null will....
    parameters: []
  /companies:
    post:
      summary: Create new Company
      tags:
        - COMPANIES
      responses: {}
      operationId: post-companies
    patch:
      summary: Patch Company by ID
      tags:
        - COMPANIES
      responses: {}
      operationId: patch-companies
    delete:
      summary: Remove Company By ID
      tags:
        - COMPANIES
      responses: {}
      operationId: delete-companies
    get:
      summary: Fetch Company
      tags:
        - COMPANIES
      responses: {}
      operationId: get-companies
  /contacts/settings:
    get:
      summary: Fetch merchant contact settings
      tags:
        - SETTINGS
      responses: {}
      operationId: get-contacts-settings
    patch:
      summary: Patch merchant contact settings
      tags:
        - SETTINGS
      responses: {}
      operationId: patch-contacts-settings
      description: ''
  /companies/settings:
    get:
      summary: Fetch merchant company settings
      tags:
        - SETTINGS
      responses: {}
      operationId: get-companies-settings
    patch:
      summary: Patch merchant company settings
      tags:
        - SETTINGS
      responses: {}
      operationId: patch-companies-settings
components:
  schemas:
    Contacts:
      title: Contacts
      type: object
      examples:
        - first_name: Marvin
          last_name: Johnson
          display_name: Marvin Johnson
          default_email:
            name: Primary email
            address: marvin@example.com
            type: PERSONAL
          default_phone:
            name: Primary phone
            country_code: '+1'
            number: 4212786391
            extension: '233'
            type: LANDLINE
          avatar: 'https://avatars.dicebear.com/api/initials/marvin%20johnson.svg'
          id_contact: C9348208238
          id_account: ACCT-3092381239838
          online:
            website: 'https://website.com'
            blog: 'https://blog.website.com'
            facebook: 'https://www.facebook.com/id'
            twitter: 'http://www.twitter.com/username'
            pinterest: 'http://www.pinterest.com/username'
            instagram: 'https://www.instagram.com/username'
            linkedin: 'http://www.linkedin.com/in/username.'
      properties:
        first_name:
          type: string
          description: Contact first name.  Required if `display_name` is not provided in request
          example: Marvin
        last_name:
          type: string
          description: Contact last name.  Required if `display_name` is not provided in request
          example: Johnson
        display_name:
          type: string
          example: Marvin Johnson
          description: Contact display name.  Required if both `first_name` and `last_name` values are not provided with request
        default_email:
          $ref: ../models/Emails.yaml
        default_phone:
          $ref: ../models/Phones.yaml
        avatar:
          type: string
          format: uri
          example: 'https://avatars.dicebear.com/api/initials/marvin%20johnson.svg'
          description: URL to contact avatar or image
        id_contact:
          type: string
          maxLength: 100
          description: 'Contact ID association with external systems.  Must be unique.  If not provided will default to a sequential `id_contact` derived from pattern set in [Contact Settings](./Contact-Settings.yaml)'
          example: C9348208238
        id_account:
          type: string
          example: ACCT-3092381239838
          maxLength: 100
          description: 'Account ID association with external systems.  If not provided will default to a sequential `id_account` derived from pattern set in [Contact Settings](./Contact-Settings.yaml)'
        online:
          $ref: ../models/Online.yaml
      required:
        - default_email
      description: Contact object model
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      description: JWT token received from User Login
    clientKey:
      name: vyalynk-client-id
      type: apiKey
      in: header
      description: API Gateway Merchant Authorization.  Use `10852b2b2f57480696e5a4e918b26cc1` for testing.
    applicationKey:
      name: vyalynk-app-id
      type: apiKey
      in: header
      description: API Gateway Application Authorization.  Use `T6554252567241061980` for testing.
  parameters:
    x-api-key:
      name: x-api-key
      in: header
      schema:
        type: string
        default: T6554252567241061980
      description: Application authentication key issued by service provider
    x-client-key:
      name: x-client-key
      in: header
      schema:
        type: string
        example: 10852b2b2f57480696e5a4e918b26cc1
      description: Client/Merchant authorization key issued by service provider
security:
  - jwt: []
  - applicationKey: []
    clientKey: []
