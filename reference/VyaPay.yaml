openapi: 3.1.0
info:
  title: VyaPay OpenAPI 3.1
  version: '1.0'
  summary: VyaPay API
  description: his is a good API
  contact:
    name: Technical Support
    url: 'https://vyapay.com'
    email: support@vyapay.com
  license:
    name: MIT
    identifier: MIT
servers:
  - url: 'http://test-api.vyapay.com/v2'
    description: Test (API Gateway)
  - url: 'http://api.vyapay.com/v2'
    description: Production (API Gateway)
  - url: 'http://localhost:3030'
    description: localhost
paths:
  /card/sale/transactions:
    get:
      summary: List Transactions
      description: List Transactions
      tags:
        - VYALYNK
        - TRANSACTIONS
      responses:
        '200':
          description: OK
      operationId: get-vyalynk-transactions
      parameters:
        - name: transaction_id
          in: query
          schema:
            type:
              - string
            example: '827263293809'
          description: Search by host gateway `transaction_id`.  Search for multiple `transaction_id`s by separating values with commas
        - name: start_date
          in: query
          description: Search for transactions processed on or after a particular date. Format date as a `mm/dd/yy`
          schema:
            type: string
            example: 01/01/22
            maxLength: 8
            minLength: 8
        - name: end_date
          in: query
          description: Search for transactions processed on or before a particular date. Format date as a `mm/dd/yy`
          schema:
            type: string
            example: 07/01/22
            maxLength: 8
            minLength: 8
        - name: payment_type
          in: query
          description: |-
            A case-sensitive string to return transactions by specific payment type type.
            * `cc` = Credit Card transactions
            * `ach` = ACH Transactions

            You can return both cc and ach transactions by separating the values with a comma.

            Example: "cc, ach"

            default: cc
          schema:
            type: string
            enum:
              - cc
              - ach
            example: cc
            maxLength: 3
            minLength: 2
            default: cc
        - name: amount
          in: query
          description: Search for a specific transaction amount.  Use a whole number string or number
          schema:
            type:
              - string
              - number
            example: 14.42
        - name: amount_from
          in: query
          description: |-
            Search for transactions equal to or greater than value provided.

            If value provided, the `amount` value will be ignored (if provided)
          schema:
            type:
              - string
              - number
            example: 12
        - name: amount_to
          in: query
          description: |-
            Search for transactions equal to or less than value provided.

            If value provided, the `amount` value will be ignored (if provided)
          schema:
            type:
              - string
              - number
            example: 123.22
        - name: cardholder_name
          in: query
          description: |-
            Search for transactions by cardholder name.

            "Fuzzy search" begins with is available.

            For example, `jen` will return transactions for both `JEN`NY SIMMS and SAMMY `JEN`KINS
          schema:
            type: string
            example: robert
        - name: card_brand
          in: query
          description: |-
            Case sensitive string search for transactions by card brand. Valid values are:

            * visa
            * mastercard
            * amex
            * discover
            * jcb
            * diners

            Return multiple card brands by separating the card brand names with a comma.

            Example: "visa, amex"

            By default the card_brand is ignored.
          schema:
            type: string
            enum:
              - visa
              - mastercard
              - amex
              - discover
              - jcb
              - diners
            example: visa
            minLength: 3
            maxLength: 10
        - name: order_id
          in: query
          description: |-
            Case sensitive string search for transactions by order_id. 

            Return multiple transactions by separating the order_id with a comma.

            Example: "abc-1277645, abc-1387665"

            By default the order_id is ignored.
          schema:
            type: string
            example: oid_234872923
            maxLength: 40
        - name: first_6
          in: query
          description: |-
            Search for transactions matching the first 6 digits of the credit card account number. 

            Return multiple transactions by separating the `first_6` values with a comma.

            Example: "545454, 454847"
          schema:
            type: string
            example: '454847'
            minLength: 6
            maxLength: 6
        - name: last_4
          in: query
          description: |-
            Search for transactions matching the last 4 digits of the credit card account number. 

            Return multiple transactions by separating the `last_4` values with a comma.

            Example: "5454, 4566"
          schema:
            type: string
            example: '4366'
            minLength: 4
            maxLength: 4
        - name: limit
          in: query
          description: 'The number of results to return when viewing a page. See [PAGINATION](#tag/Pagination) for more details.'
          schema:
            type: integer
            example: 40
        - name: offset
          in: query
          description: 'The number of results to skip. See [PAGINATION](#tag/Pagination) for more details.'
          schema:
            type: integer
            example: 20
    post:
      summary: Create Transaction
      operationId: post-card-sale-transactions
      tags:
        - VYALYNK
        - TRANSACTIONS
      responses:
        '200':
          description: OK
      description: Send Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Transaction-Card-Sale.yaml
            examples: {}
          application/xml:
            schema:
              $ref: ../models/Transaction-Card-Sale.yaml
        description: ''
      x-internal: false
tags:
  - name: TRANSACTIONS
  - name: VYALYNK
